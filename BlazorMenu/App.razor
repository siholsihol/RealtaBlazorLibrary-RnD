@using Microsoft.AspNetCore.Components.WebAssembly.Services
@using System.Reflection
@using BlazorMenu.Shared.Tabs

@inject LazyAssemblyLoader AssemblyLoader
@inject NavigationManager NavigationManager

@if (_environment.IsDevelopment)
{
    <Router AppAssembly="@typeof(Program).Assembly"
            AdditionalAssemblies="@lazyLoadedAssemblies">
        <Found Context="routeData">
            <CascadingAuthenticationState>
                <MenuTabsRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </CascadingAuthenticationState>
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </CascadingAuthenticationState>
        </NotFound>
    </Router>
}
else
{
    <R_TenantRouter AppAssembly="@typeof(Program).Assembly">
        <Found Context="routeData">
            <CascadingAuthenticationState>
                <MenuTabsRouteView RouteData="@routeData" DefaultLayout="@typeof(MainLayout)" />
            </CascadingAuthenticationState>
        </Found>
        <NotFound>
            <CascadingAuthenticationState>
                <LayoutView Layout="@typeof(MainLayout)">
                    <p>Sorry, there's nothing at this address.</p>
                </LayoutView>
            </CascadingAuthenticationState>
        </NotFound>
        <NoTenant Context="message">
            <LayoutView Layout="@typeof(NoTenantLayout)">
                <p>@message</p>
            </LayoutView>
        </NoTenant>
        <ApiError Context="message">
            <LayoutView Layout="@typeof(NoTenantLayout)">
                <p>@message</p>
            </LayoutView>
        </ApiError>
    </R_TenantRouter>
}

@code {
    [Inject] private R_IEnvironment _environment { get; set; }

    private List<Assembly> lazyLoadedAssemblies = new()
    {
       
    };
}